// qemu uos boot and crt0

// ---- start ------------------------------

.global _code_start
.global exc_handler

.section .text
_code_start:
    adr  x5, dtb                // save the dtb pointer
    stp  x0, x1, [x5]

    ldr  x0, =exc_table1        // setup the el1 exception vectors (exc.s)
//  msr  vbar_el1, x0           // for virtualization=off
    msr  vbar_el2, x0

    // ---- clear bss

    mov     x0, #0
    ldr     x1, =_bss_start
    ldr     x2, =_bss_end
1:
    str     x0, [x1], #8
    cmp     x1, x2
    blt     1b

    // ---- init the cpu0 stack and thread0 local storage pointer

    ldr     x0, =_stack0_start
    mov     sp, x0
    ldr     x0, =_tls0
    msr     tpidr_el0, x0

    // ---- call main

    bl   main
    b .                             // hang

// ---- pl011 uart -------------------------

    .global con_puts
con_puts:
    ldr  x1, uart_addr
loop:
    ldrb w2, [x0]
    cmp  x2, #0
    b.eq done
    strb w2, [x1]
    add  x0, x0, #1
    b    loop
done:
    ret

    .align 4
uart_addr:
    .dword 0x000009000000       // qemu-system-aarch64 -M virt


.section .data

    .global dtb
dtb:
    .dword 0

